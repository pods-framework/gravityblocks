/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(8);
exports.encode = exports.stringify = __webpack_require__(9);


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wordpress_url__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_sandbox___ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_conditional_logic___ = __webpack_require__(11);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var _wp$blocks = wp.blocks,
    InspectorControls = _wp$blocks.InspectorControls,
    registerBlockType = _wp$blocks.registerBlockType;
var _wp$components = wp.components,
    Dashicon = _wp$components.Dashicon,
    PanelBody = _wp$components.PanelBody,
    Placeholder = _wp$components.Placeholder,
    SelectControl = _wp$components.SelectControl,
    Spinner = _wp$components.Spinner,
    TextControl = _wp$components.TextControl,
    ToggleControl = _wp$components.ToggleControl;
var _wp$element = wp.element,
    Component = _wp$element.Component,
    RawHTML = _wp$element.RawHTML;






var block = void 0;
var block_object = void 0;

for (block in pods_gutenberg.block_configs) {
	block_object = pods_gutenberg.block_configs[block];

	registerBlockType(block_object.type, {
		title: block_object.title,
		description: block_object.description,
		category: block_object.category,
		supports: block_object.supports,
		attributes: block_object.attributes,
		icon: function icon() {
			return React.createElement(
				'svg',
				{ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 512 512', width: '20px', height: '20px',
					focusable: 'false', 'aria-hidden': 'true',
					className: 'dashicon dashicon-pods' },
				React.createElement(
					'defs',
					null,
					React.createElement('path', { d: 'M0.673556919,223.529876 C0.673556919,346.878779 100.681589,446.874676 224.044146,446.874676 L224.044146,446.874676 C314.787737,446.874676 392.893033,392.771671 427.855795,315.066868 L427.855795,315.066868 C418.118043,285.312036 409.690996,232.962707 443.302093,180.636133 L443.302093,180.636133 C441.863958,173.245211 440.061738,165.98627 437.915155,158.877514 L437.915155,158.877514 C334.84881,261.229342 251.635707,270.815392 188.984295,269.14667 L188.984295,269.14667 C188.404793,269.128466 186.297652,268.787136 185.737872,267.523459 L185.737872,267.523459 C185.737872,267.523459 184.824626,263.430538 187.494581,263.430538 L187.494581,263.430538 C307.525761,263.430538 375.887238,192.805668 431.737849,141.166304 L431.737849,141.166304 C428.691673,133.488666 425.229833,126.02341 421.38267,118.790258 L421.38267,118.790258 C361.175177,102.227433 338.037586,52.9151777 329.82444,26.7647854 L329.82444,26.7647854 C298.338688,9.80450083 262.315529,0.180525391 224.044146,0.180525391 L224.044146,0.180525391 C100.681589,0.180525391 0.673556919,100.176422 0.673556919,223.529876 L0.673556919,223.529876 Z M284.850862,67.4861557 C284.850862,67.4861557 370.127112,58.2065438 395.24138,163.578759 L395.24138,163.578759 C302.055387,157.152662 284.850862,67.4861557 284.850862,67.4861557 L284.850862,67.4861557 Z M250.731563,111.824102 C250.731563,111.824102 326.335293,109.29978 343.545886,203.841989 L343.545886,203.841989 C261.701136,192.000131 250.731563,111.824102 250.731563,111.824102 L250.731563,111.824102 Z M209.203138,149.397655 C209.203138,149.397655 277.241489,144.957338 294.652329,229.613127 L294.652329,229.613127 C220.694566,221.296822 209.203138,149.397655 209.203138,149.397655 L209.203138,149.397655 Z M395.24138,163.578759 C395.338469,163.584827 395.426456,163.590895 395.523546,163.59848 L395.523546,163.59848 L395.318748,163.906436 C395.292959,163.79721 395.267169,163.687985 395.24138,163.578759 L395.24138,163.578759 Z M172.997937,179.257162 C172.997937,179.257162 232.780665,175.347801 248.082846,249.734881 L248.082846,249.734881 C183.09674,242.431946 172.997937,179.257162 172.997937,179.257162 L172.997937,179.257162 Z M125.099545,186.550994 C125.099545,186.550994 182.529374,182.803955 197.224748,254.255601 L197.224748,254.255601 C134.805439,247.239383 125.099545,186.550994 125.099545,186.550994 L125.099545,186.550994 Z M77.6896328,189.838377 C77.6896328,189.838377 129.809892,186.440252 143.14905,251.285276 L143.14905,251.285276 C86.4944174,244.915308 77.6896328,189.838377 77.6896328,189.838377 L77.6896328,189.838377 Z M26.1412902,199.330372 C26.1412902,199.330372 69.8663602,187.834393 88.7047157,240.528086 L88.7047157,240.528086 C86.6552215,240.694958 84.6679252,240.77536 82.7397927,240.77536 L82.7397927,240.77536 C38.8706057,240.773843 26.1412902,199.330372 26.1412902,199.330372 L26.1412902,199.330372 Z M398.293624,203.717594 C398.26025,203.620504 398.225358,203.518864 398.195018,203.423292 L398.195018,203.423292 L398.498422,203.506728 C398.430156,203.576511 398.36189,203.646294 398.293624,203.717594 L398.293624,203.717594 C430.842807,301.8248 372.869885,355.22239 372.869885,355.22239 L372.869885,355.22239 C372.869885,355.22239 332.134861,271.507153 398.293624,203.717594 L398.293624,203.717594 Z M343.545886,203.841989 C343.626288,203.852608 343.708208,203.864745 343.78861,203.876881 L343.78861,203.876881 L343.598982,204.13174 C343.582295,204.033134 343.565608,203.940596 343.545886,203.841989 L343.545886,203.841989 Z M294.652329,229.613127 C294.725146,229.622229 294.802514,229.629814 294.873814,229.638916 L294.873814,229.638916 L294.706942,229.87102 C294.688737,229.781516 294.67205,229.701114 294.652329,229.613127 L294.652329,229.613127 Z M350.369443,238.120575 C350.358824,238.025003 350.348204,237.923363 350.339102,237.826273 L350.339102,237.826273 L350.596996,237.988595 C350.521145,238.034105 350.446811,238.076582 350.369443,238.120575 L350.369443,238.120575 C360.554716,336.779977 297.068942,369.157737 297.068942,369.157737 L297.068942,369.157737 C297.068942,369.157737 276.554279,281.310137 350.369443,238.120575 L350.369443,238.120575 Z M88.8457985,240.51595 L88.7608454,240.685856 C88.7426412,240.632761 88.7214029,240.578148 88.7047157,240.528086 L88.7047157,240.528086 C88.7517433,240.523535 88.7987709,240.520501 88.8457985,240.51595 L88.8457985,240.51595 Z M248.082846,249.734881 C248.146561,249.740949 248.207242,249.748534 248.272474,249.754602 L248.272474,249.754602 L248.129874,249.965468 C248.113187,249.8881 248.098016,249.810732 248.082846,249.734881 L248.082846,249.734881 Z M143.14905,251.285276 C143.205179,251.292861 143.264343,251.298929 143.320473,251.304997 L143.320473,251.304997 L143.190009,251.482488 C143.176356,251.415739 143.16422,251.352024 143.14905,251.285276 L143.14905,251.285276 Z M66.0404355,267.405131 C66.0404355,267.405131 102.813002,232.393824 149.329389,271.431302 L149.329389,271.431302 C135.122496,283.570497 121.677147,287.74837 109.899003,287.74837 L109.899003,287.74837 C83.9078981,287.74837 66.0404355,267.405131 66.0404355,267.405131 L66.0404355,267.405131 Z M197.224748,254.255601 C197.286946,254.261669 197.349143,254.269254 197.411341,254.275322 L197.411341,254.275322 L197.271775,254.48012 C197.256605,254.407303 197.239918,254.328418 197.224748,254.255601 L197.224748,254.255601 Z M293.877132,265.595326 C293.878649,265.508856 293.878649,265.416318 293.880166,265.329848 L293.880166,265.329848 L294.092548,265.510373 C294.019732,265.539196 293.949949,265.566503 293.877132,265.595326 L293.877132,265.595326 C293.004845,354.048216 233.77583,373.604122 233.77583,373.604122 L233.77583,373.604122 C233.77583,373.604122 224.461326,293.223296 293.877132,265.595326 L293.877132,265.595326 Z M149.462887,271.316009 L149.462887,271.543562 C149.417377,271.505636 149.373383,271.469228 149.329389,271.431302 L149.329389,271.431302 C149.371866,271.39186 149.417377,271.353934 149.462887,271.316009 L149.462887,271.316009 Z M119.24233,319.297837 C119.24233,319.297837 138.843747,268.318377 195.137328,278.248791 L195.137328,278.248791 C179.043262,314.939439 153.727231,321.914697 136.815491,321.914697 L136.815491,321.914697 C126.449692,321.914697 119.24233,319.297837 119.24233,319.297837 L119.24233,319.297837 Z M195.216213,278.068265 L195.299649,278.277614 C195.245037,278.268512 195.191941,278.257893 195.137328,278.248791 L195.137328,278.248791 C195.164634,278.18811 195.190424,278.128946 195.216213,278.068265 L195.216213,278.068265 Z M241.391271,281.185742 C241.404924,281.111408 241.418577,281.03404 241.43223,280.959706 L241.43223,280.959706 L241.591517,281.155401 C241.524768,281.16602 241.458019,281.176639 241.391271,281.185742 L241.391271,281.185742 C227.923166,357.235476 174.067436,362.021674 174.067436,362.021674 L174.067436,362.021674 C174.067436,362.021674 177.597542,290.847643 241.391271,281.185742 L241.391271,281.185742 Z',
						id: 'path-1' })
				),
				React.createElement(
					'g',
					{ id: 'Symbols', fill: 'none', fillRule: 'evenodd' },
					React.createElement(
						'g',
						{ id: 'pods-circle-green' },
						React.createElement(
							'g',
							{ id: 'Group', transform: 'translate(4 4)' },
							React.createElement(
								'g',
								{ id: 'Group-3', transform: 'translate(28.393 28.351)' },
								React.createElement(
									'mask',
									{ id: 'mask-2', fill: '#fff' },
									React.createElement('use', { xlinkHref: '#path-1' })
								),
								React.createElement('polygon', { id: 'Fill-1', fill: '#95BF3B', mask: 'url(#mask-2)', points: '-14.496644 -14.9896755 458.470777 -14.9896755 458.470777 462.044877 -14.496644 462.044877'
								})
							),
							React.createElement('path', { d: 'M251.897683,15.7707206 C121.690332,15.7707206 15.762887,121.689063 15.762887,251.879727 C15.762887,382.071908 121.690332,487.990251 251.897683,487.990251 C382.105034,487.990251 488.035513,382.071908 488.035513,251.879727 C488.035513,121.689063 382.105034,15.7707206 251.897683,15.7707206 M251.897683,503.545775 C113.114617,503.545775 0.207363011,390.647623 0.207363011,251.879727 C0.207363011,113.110315 113.114617,0.213679625 251.897683,0.213679625 C390.680749,0.213679625 503.591037,113.110315 503.591037,251.879727 C503.591037,390.647623 390.680749,503.545775 251.897683,503.545775',
								id: 'Fill-4', fill: '#95BF3B' })
						)
					)
				)
			);
		},

		transforms: {
			from: [{
				type: 'shortcode',
				tag: ['pods'],
				attributes: {
					formId: {
						type: 'string',
						shortcode: function shortcode(_ref) {
							var id = _ref.named.id;

							return parseInt(id);
						}
					},
					title: {
						type: 'bool',
						shortcode: function shortcode(_ref2) {
							var title = _ref2.named.title;

							return 'true' === title;
						}
					},
					description: {
						type: 'bool',
						shortcode: function shortcode(_ref3) {
							var description = _ref3.named.description;

							return 'true' === description;
						}
					},
					ajax: {
						type: 'bool',
						shortcode: function shortcode(_ref4) {
							var ajax = _ref4.named.ajax;

							return 'true' === ajax;
						}
					},
					tabindex: {
						type: 'integer',
						shortcode: function shortcode(_ref5) {
							var tabindex = _ref5.named.tabindex;

							return parseInt(tabindex);
						}
					}
				}
			}]
		},

		edit: function (_Component) {
			_inherits(edit, _Component);

			function edit() {
				_classCallCheck(this, edit);

				var _this = _possibleConstructorReturn(this, (edit.__proto__ || Object.getPrototypeOf(edit)).apply(this, arguments));

				_this.setFormId = _this.setFormId.bind(_this);
				_this.updateBlockPreview = _this.updateBlockPreview.bind(_this);

				_this.state = {
					html: '',
					fetching: false,
					previewError: false
				};

				return _this;
			}

			_createClass(edit, [{
				key: 'componentWillMount',
				value: function componentWillMount() {
					var _props$attributes = this.props.attributes,
					    formId = _props$attributes.formId,
					    show_preview = _props$attributes.show_preview;

					var formFound = false;

					if (!formId) {
						return;
					}

					for (var i = 0; i < pods_gutenberg.pods.length; i++) {
						if (pods_gutenberg.pods[i].value == formId) {
							formFound = true;
						}
					}

					if (!formFound) {
						this.props.setAttributes({ formId: '' });
						return;
					}

					if (this.props.attributes.formId && this.props.attributes.show_preview) {
						this.setState({ fetching: true });
						this.updateBlockPreview(this.props.attributes);
					}
				}
			}, {
				key: 'componentWillReceiveProps',
				value: function componentWillReceiveProps(props) {

					var oldAtts = this.props.attributes,
					    newAtts = props.attributes;

					if (oldAtts.formId === newAtts.formId && oldAtts.title === newAtts.title && oldAtts.description === newAtts.description && oldAtts.show_preview === newAtts.show_preview) {
						return;
					}

					if (!props.attributes.formId) {
						this.setState({ html: '' });
						return;
					}

					this.updateBlockPreview(props.attributes);
				}
			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {

					this.unmounting = true;
				}
			}, {
				key: 'setFormId',
				value: function setFormId(formId) {

					this.props.setAttributes({ formId: formId });
				}
			}, {
				key: 'updateBlockPreview',
				value: function updateBlockPreview(atts) {
					var _this2 = this;

					if (this.state.fetching || !atts.show_preview) {
						return;
					}

					atts.type = block_object.type;

					var apiURL = Object(__WEBPACK_IMPORTED_MODULE_0__wordpress_url__["a" /* addQueryArgs */])(wpApiSettings.root + block_object.rest_preview_url, atts);

					this.setState({ fetching: true });

					window.fetch(apiURL).then(function (response) {

						if (_this2.unmounting) {
							return;
						}

						response.json().catch(function (error) {
							return { success: false };
						}).then(function (obj) {

							if (obj.success) {
								_this2.setState({
									fetching: false,
									html: obj.data.html,
									previewError: false
								});
							} else {
								_this2.setState({
									fetching: false,
									previewError: true
								});
							}
						});
					});
				}
			}, {
				key: 'render',
				value: function render() {
					var _this3 = this;

					var _props$attributes2 = this.props.attributes,
					    formId = _props$attributes2.formId,
					    title = _props$attributes2.title,
					    description = _props$attributes2.description,
					    ajax = _props$attributes2.ajax,
					    tabindex = _props$attributes2.tabindex,
					    show_preview = _props$attributes2.show_preview,
					    conditional_logic = _props$attributes2.conditional_logic;
					var _state = this.state,
					    html = _state.html,
					    fetching = _state.fetching,
					    previewError = _state.previewError;
					var _props = this.props,
					    setAttributes = _props.setAttributes,
					    isSelected = _props.isSelected;


					var toggleTitle = function toggleTitle() {
						return setAttributes({ title: !title });
					};
					var toggleDescription = function toggleDescription() {
						return setAttributes({ description: !description });
					};
					var toggleAjax = function toggleAjax() {
						return setAttributes({ ajax: !ajax });
					};
					var toggleshowPreview = function toggleshowPreview() {
						return setAttributes({ show_preview: !show_preview });
					};
					var toggleConditionalLogic = function toggleConditionalLogic() {
						return setAttributes({
							conditional_logic: _extends({}, conditional_logic, {
								enabled: !conditional_logic.enabled
							})
						});
					};

					var updateTabindex = function updateTabindex(tabindex) {
						return setAttributes({ tabindex: tabindex });
					};
					var updateConditionalLogic = function updateConditionalLogic(logic) {
						return setAttributes({ conditional_logic: _extends({}, conditional_logic, logic) });
					};

					var setFormIdFromPlaceholder = function setFormIdFromPlaceholder(e) {
						return _this3.setFormId(e.target.value);
					};

					var controls = [isSelected && React.createElement(
						InspectorControls,
						{ key: 'inspector' },
						React.createElement(SelectControl, {
							label: __('Pod', 'pods-gutenberg-blocks'),
							value: formId,
							options: pods_gutenberg.pods,
							onChange: this.setFormId
						}),
						React.createElement(
							PanelBody,
							{
								title: __('Conditional Logic', 'pods-gutenberg-blocks'),
								className: 'pods-block__panel'
							},
							React.createElement(ToggleControl, {
								label: __('Conditional Logic', 'pods-gutenberg-blocks'),
								checked: conditional_logic.enabled,
								onChange: toggleConditionalLogic
							}),
							conditional_logic.enabled && React.createElement(__WEBPACK_IMPORTED_MODULE_2__components_conditional_logic___["a" /* default */], {
								key: 'pods-block__conditional',
								logic: conditional_logic,
								onChange: updateConditionalLogic
							})
						),
						React.createElement(
							PanelBody,
							{
								title: __('Advanced', 'pods-gutenberg-blocks'),
								initialOpen: false,
								className: 'pods-block__panel'
							},
							React.createElement(ToggleControl, {
								label: __('Preview', 'pods-gutenberg-blocks'),
								checked: show_preview,
								onChange: toggleshowPreview
							})
						)
					)];

					if (fetching) {
						return [controls, React.createElement(
							'div',
							{ key: 'loading', className: 'wp-block-embed is-loading' },
							React.createElement(Spinner, null),
							React.createElement(
								'p',
								null,
								__('Loading block preview...', 'pods-gutenberg-blocks')
							)
						)];
					}

					if (previewError) {
						return [controls, React.createElement(
							'div',
							{ key: 'loading', className: 'wp-block-embed is-loading' },
							React.createElement(Dashicon, { icon: 'dismiss' }),
							React.createElement(
								'p',
								null,
								__('Could not load block preview.', 'pods-gutenberg-blocks')
							)
						)];
					}

					if (!html || !show_preview) {

						return [controls, React.createElement(
							Placeholder,
							{ key: 'placeholder', className: 'wp-block-embed pods-block__placeholder' },
							React.createElement(
								'div',
								{ className: 'pods-block__placeholder-brand' },
								React.createElement('img', { src: pods_gutenberg.icon, width: '110' }),
								React.createElement(
									'p',
									null,
									React.createElement(
										'strong',
										null,
										'Pods'
									)
								)
							),
							React.createElement(
								'form',
								null,
								React.createElement(
									'select',
									{ value: formId, onChange: setFormIdFromPlaceholder },
									pods_gutenberg.pods.map(function (pod) {
										return React.createElement(
											'option',
											{ key: pod.value, value: pod.value },
											pod.label
										);
									})
								)
							)
						)];
					}

					return [controls, React.createElement(
						'div',
						{ key: 'sandbox', className: 'wp-block-embed__wrapper' },
						React.createElement(__WEBPACK_IMPORTED_MODULE_1__components_sandbox___["a" /* default */], { html: html })
					)];
				}
			}]);

			return edit;
		}(Component),

		save: function save(props) {
			var name = props.attributes.name;

			var shortcode = '[pods name="' + name + '"]';

			return name ? React.createElement(
				RawHTML,
				null,
				shortcode
			) : null;
		}

	});
}

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = addQueryArgs;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_url__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_url___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_url__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_querystring___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_querystring__);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * External dependencies
 */



/**
 * Appends arguments to the query string of the url
 *
 * @param  {String} url   URL
 * @param  {Object} args  Query Args
 *
 * @return {String}       Updated URL
 */
function addQueryArgs(url, args) {
  var parsedURL = Object(__WEBPACK_IMPORTED_MODULE_0_url__["parse"])(url, true);
  var query = _extends({}, parsedURL.query, args);
  delete parsedURL.search;

  return Object(__WEBPACK_IMPORTED_MODULE_0_url__["format"])(_extends({}, parsedURL, { query: query }));
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var punycode = __webpack_require__(4);
var util = __webpack_require__(7);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(0);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return punycode;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), __webpack_require__(6)))

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 6 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Component = wp.element.Component;

var Sandbox = function (_Component) {
	_inherits(Sandbox, _Component);

	function Sandbox() {
		_classCallCheck(this, Sandbox);

		var _this = _possibleConstructorReturn(this, (Sandbox.__proto__ || Object.getPrototypeOf(Sandbox)).apply(this, arguments));

		_this.trySandbox = _this.trySandbox.bind(_this);
		_this.checkMessageForResize = _this.checkMessageForResize.bind(_this);
		_this.checkFocus = _this.checkFocus.bind(_this);

		_this.state = {
			width: 0,
			height: 0
		};
		return _this;
	}

	_createClass(Sandbox, [{
		key: 'isFrameAccessible',
		value: function isFrameAccessible() {
			try {
				return !!this.iframe.contentDocument.body;
			} catch (e) {
				return false;
			}
		}
	}, {
		key: 'checkMessageForResize',
		value: function checkMessageForResize(event) {
			var iframe = this.iframe;

			// Attempt to parse the message data as JSON if passed as string
			var data = event.data || {};
			if ('string' === typeof data) {
				try {
					data = JSON.parse(data);
				} catch (e) {} // eslint-disable-line no-empty
			}

			// Verify that the mounted element is the source of the message
			if (!iframe || iframe.contentWindow !== event.source) {
				return;
			}

			// Update the state only if the message is formatted as we expect, i.e.
			// as an object with a 'resize' action, width, and height
			var _data = data,
			    action = _data.action,
			    width = _data.width,
			    height = _data.height;
			var _state = this.state,
			    oldWidth = _state.width,
			    oldHeight = _state.height;


			if ('resize' === action && (oldWidth !== width || oldHeight !== height)) {
				this.setState({ width: width, height: height });
			}
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			window.addEventListener('message', this.checkMessageForResize, false);
			window.addEventListener('blur', this.checkFocus);
			this.trySandbox();
		}
	}, {
		key: 'componentDidUpdate',
		value: function componentDidUpdate() {
			this.trySandbox();
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			window.removeEventListener('message', this.checkMessageForResize);
			window.removeEventListener('blur', this.checkFocus);
		}
	}, {
		key: 'checkFocus',
		value: function checkFocus() {
			if (this.props.onFocus && document.activeElement === this.iframe) {
				this.props.onFocus();
			}
		}
	}, {
		key: 'trySandbox',
		value: function trySandbox() {
			if (!this.isFrameAccessible()) {
				return;
			}

			var body = this.iframe.contentDocument.body;
			if (null !== body.getAttribute('data-resizable-iframe-connected')) {
				return;
			}

			// writing the document like this makes it act in the same way as if it was
			// loaded over the network, so DOM creation and mutation, script execution, etc.
			// all work as expected
			this.iframe.contentWindow.document.open();
			this.iframe.contentWindow.document.write(this.props.html);
			this.iframe.contentWindow.document.close();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			return React.createElement('iframe', {
				ref: function ref(node) {
					return _this2.iframe = node;
				},
				title: this.props.title,
				scrolling: 'no',
				sandbox: 'allow-scripts allow-same-origin allow-presentation',
				onLoad: this.trySandbox,
				width: Math.ceil(this.state.width),
				height: Math.ceil(this.state.height),
				style: { pointerEvents: 'none' } });
		}
	}], [{
		key: 'defaultProps',
		get: function get() {
			return {
				html: '',
				title: ''
			};
		}
	}]);

	return Sandbox;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (Sandbox);

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ruleset___ = __webpack_require__(12);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;
var Component = wp.element.Component;
var _wp$components = wp.components,
    Button = _wp$components.Button,
    Popover = _wp$components.Popover,
    RadioControl = _wp$components.RadioControl;




var LogicControl = function (_Component) {
	_inherits(LogicControl, _Component);

	function LogicControl() {
		_classCallCheck(this, LogicControl);

		var _this = _possibleConstructorReturn(this, (LogicControl.__proto__ || Object.getPrototypeOf(LogicControl)).apply(this, arguments));

		_this.state = {
			visible: {
				actionType: false,
				logicType: false
			}
		};

		return _this;
	}

	_createClass(LogicControl, [{
		key: 'getActionTypes',
		value: function getActionTypes() {

			return [{
				label: __('Show', 'pods-gutenberg-blocks'),
				value: 'show'
			}, {
				label: __('Hide', 'pods-gutenberg-blocks'),
				value: 'hide'
			}];
		}
	}, {
		key: 'getActionTypeLabel',
		value: function getActionTypeLabel() {
			var actionType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'show';


			var actionTypes = this.getActionTypes();

			var targetAction = actionTypes.filter(function (action) {
				return action.value === actionType;
			});

			return targetAction[0].label;
		}
	}, {
		key: 'getLogicTypes',
		value: function getLogicTypes() {
			return [{
				label: __('all', 'pods-gutenberg-blocks'),
				value: 'all'
			}, {
				label: __('any', 'pods-gutenberg-blocks'),
				value: 'any'
			}];
		}
	}, {
		key: 'getLogicTypeLabel',
		value: function getLogicTypeLabel() {
			var logicType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'all';


			var logicTypes = this.getLogicTypes();

			var targetLogic = logicTypes.filter(function (logic) {
				return logic.value === logicType;
			});

			return targetLogic[0].label;
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var _props$logic = this.props.logic,
			    actionType = _props$logic.actionType,
			    logicType = _props$logic.logicType,
			    rules = _props$logic.rules;


			var actionTypes = this.getActionTypes();
			var logicTypes = this.getLogicTypes();

			var toggleActionType = function toggleActionType() {
				return _this2.setState({ visible: { actionType: !_this2.state.visible.actionType } });
			};
			var toggleLogicType = function toggleLogicType() {
				return _this2.setState({ visible: { logicType: !_this2.state.visible.logicType } });
			};

			var changeActionType = function changeActionType(actionType) {
				return _this2.props.onChange({ actionType: actionType });
			};
			var changeLogicType = function changeLogicType(logicType) {
				return _this2.props.onChange({ logicType: logicType });
			};

			var changeRules = function changeRules(rules) {
				_this2.props.onChange({ rules: rules });
			};

			return React.createElement(
				'div',
				null,
				React.createElement(
					'div',
					{ className: 'pods-block__conditional-type' },
					React.createElement(
						Button,
						{ className: 'button-link', onClick: toggleActionType },
						React.createElement(
							'div',
							null,
							this.getActionTypeLabel(actionType)
						),
						this.state.visible.actionType && React.createElement(
							Popover,
							{ onClose: toggleActionType, position: 'bottom',
								className: 'pods-block__conditional-popover' },
							React.createElement(RadioControl, { options: actionTypes, onChange: changeActionType, selected: actionType })
						)
					),
					'\xA0form if\xA0',
					React.createElement(
						Button,
						{ className: 'button-link', onClick: toggleLogicType },
						React.createElement(
							'div',
							null,
							this.getLogicTypeLabel(logicType)
						),
						this.state.visible.logicType && React.createElement(
							Popover,
							{ onClose: toggleLogicType, position: 'bottom',
								className: 'pods-block__conditional-popover' },
							React.createElement(RadioControl, { options: logicTypes, onChange: changeLogicType, selected: logicType })
						)
					),
					'\xA0rules match'
				),
				React.createElement(__WEBPACK_IMPORTED_MODULE_0__ruleset___["a" /* default */], { key: 'pods-block__conditional-ruleset', rules: rules, onChange: changeRules })
			);
		}
	}]);

	return LogicControl;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (LogicControl);

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rule___ = __webpack_require__(13);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;

var Component = wp.element.Component;
var IconButton = wp.components.IconButton;




var Ruleset = function (_Component) {
	_inherits(Ruleset, _Component);

	function Ruleset() {
		_classCallCheck(this, Ruleset);

		var _this = _possibleConstructorReturn(this, (Ruleset.__proto__ || Object.getPrototypeOf(Ruleset)).apply(this, arguments));

		_this.addRule = _this.addRule.bind(_this);
		_this.deleteRule = _this.deleteRule.bind(_this);
		_this.updateRule = _this.updateRule.bind(_this);

		return _this;
	}

	_createClass(Ruleset, [{
		key: 'addRule',
		value: function addRule() {

			var rules = this.getRules(),
			    newRules = [].concat(_toConsumableArray(rules), [this.getDefaultOption()]);

			this.setRules(newRules);
		}
	}, {
		key: 'deleteRule',
		value: function deleteRule(index) {

			var rules = this.getRules();
			rules.splice(index, 1);

			this.setRules(rules);
		}
	}, {
		key: 'getRules',
		value: function getRules() {

			return this.props.rules;
		}
	}, {
		key: 'setRules',
		value: function setRules(rules) {

			this.props.onChange(rules);
		}
	}, {
		key: 'updateRule',
		value: function updateRule(rule, index) {

			var rules = this.getRules();

			rules[index] = rule;

			this.props.onChange(rules);
		}
	}, {
		key: 'getOptions',
		value: function getOptions() {

			return pods.conditionalOptions;
		}
	}, {
		key: 'getDefaultOption',
		value: function getDefaultOption() {

			var options = this.getOptions(),
			    option = options[0];

			return {
				key: option.key.value,
				operator: option.operators[0].value,
				value: option.value.choices ? option.value.choices[0].choices ? option.value.choices[0].choices[0].value : option.value.choices[0].value : ''
			};
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var rules = this.props.rules;
			var options = this.getOptions();

			return [rules && rules.map(function (rule, index) {
				return React.createElement(__WEBPACK_IMPORTED_MODULE_0__rule___["a" /* default */], {
					options: options,
					rule: rule,
					key: 'pods-block__conditional-rule-' + index,
					index: index,
					updateRule: _this2.updateRule,
					deleteRule: _this2.deleteRule
				});
			}), React.createElement(
				'div',
				{ className: "pods-block__conditional-rule-add" + (!rules || rules.length == 0 ? " no-rules" : ""), key: 'pods-block__conditional-rule-add' },
				React.createElement(
					IconButton,
					{
						icon: 'insert',
						label: __('Add Rule'),
						onClick: this.addRule,
						className: 'editor-inserter__toggle'
					},
					!rules || rules.length == 0 && React.createElement(
						'span',
						null,
						'Add Rule'
					)
				)
			)];
		}
	}]);

	return Ruleset;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (Ruleset);

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var __ = wp.i18n.__;

var Component = wp.element.Component;
var _wp$components = wp.components,
    Dashicon = _wp$components.Dashicon,
    DateTimePicker = _wp$components.DateTimePicker,
    Dropdown = _wp$components.Dropdown;
var _wp$date = wp.date,
    dateI18n = _wp$date.dateI18n,
    settings = _wp$date.settings;

var Rule = function (_Component) {
	_inherits(Rule, _Component);

	function Rule() {
		_classCallCheck(this, Rule);

		return _possibleConstructorReturn(this, (Rule.__proto__ || Object.getPrototypeOf(Rule)).apply(this, arguments));
	}

	_createClass(Rule, [{
		key: 'updateKey',
		value: function updateKey(key) {

			var rule = this.props.rule;

			rule.key = key;
			rule.operator = this.getDefaultOperator();
			rule.value = '';

			this.props.updateRule(rule, this.props.index);
		}
	}, {
		key: 'updateOperator',
		value: function updateOperator(operator) {

			var rule = this.props.rule;

			rule.operator = operator;

			this.props.updateRule(rule, this.props.index);
		}
	}, {
		key: 'updateValue',
		value: function updateValue(value) {

			var rule = this.props.rule;

			rule.value = value;
			this.props.updateRule(rule, this.props.index);
		}
	}, {
		key: 'getDefaultOperator',
		value: function getDefaultOperator() {

			var operators = this.getOperators(),
			    operatorValues = operators.map(function (operator) {
				return operator.value;
			});

			return operatorValues.includes(this.props.rule.operator) ? this.props.rule.operator : operatorValues[0];
		}
	}, {
		key: 'getOperators',
		value: function getOperators() {
			var key = this.props.rule.key,
			    options = pods.conditionalOptions;


			for (var i = 0; i < options.length; i++) {

				if (options[i].key.value !== key && key) {
					continue;
				}

				return options[i].operators;
			}

			return [];
		}
	}, {
		key: 'getValue',
		value: function getValue() {
			var key = this.props.rule.key,
			    options = pods.conditionalOptions;


			for (var i = 0; i < options.length; i++) {

				if (options[i].key.value !== key && key) {
					continue;
				}

				return options[i].value;
			}

			return [];
		}
	}, {
		key: 'getValueInput',
		value: function getValueInput() {
			var _this2 = this;

			var value = this.props.rule.value;

			var index = this.props.index;

			var valueProps = this.getValue();
			var updateValue = function updateValue(e) {
				return _this2.updateValue(e.target.value);
			};

			switch (valueProps.type) {

				case 'date':

					var updateDateValue = function updateDateValue(newDate) {
						return _this2.updateValue(newDate);
					};
					var is12HourTime = /a(?!\\)/i.test(settings.formats.time.toLowerCase() // Test only the lower case a
					.replace(/\\\\/g, '') // Replace "//" with empty strings
					.split('').reverse().join('') // Reverse the string and test for "a" not followed by a slash
					);

					return React.createElement(Dropdown, {
						key: 'pods-block__conditional-rule-' + index + '-value',
						position: 'bottom left',
						contentClassName: 'pods-block__conditional-rule-value-popover',
						className: 'pods-block__conditional-rule-value',
						renderToggle: function renderToggle(_ref) {
							var onToggle = _ref.onToggle,
							    isOpen = _ref.isOpen;
							return React.createElement(
								'button',
								{
									type: 'button',
									className: 'button-link',
									onClick: onToggle,
									'aria-expanded': isOpen
								},
								value ? dateI18n(settings.formats.datetime, value) : __('Select a Date', 'pods-gutenberg-blocks')
							);
						},
						renderContent: function renderContent() {
							return [React.createElement(DateTimePicker, {
								key: 'date-time-picker',
								currentDate: value,
								onChange: updateDateValue,
								locale: settings.l10n.locale,
								is12Hour: is12HourTime
							})];
						}
					});

				case 'select':
					return React.createElement(
						'select',
						{
							key: 'pods-block__conditional-rule-' + index + '-value',
							className: 'pods-block__conditional-rule-value',
							value: value,
							onChange: updateValue },
						this.getValue().choices.map(function (value) {

							if (value.choices) {

								var choices = value.choices.map(function (subvalue) {
									return React.createElement(
										'option',
										{ key: subvalue.value, value: subvalue.value },
										subvalue.label
									);
								});

								return React.createElement(
									'optgroup',
									{ label: value.label, key: value.label },
									choices
								);
							} else {

								return React.createElement(
									'option',
									{ key: value.value, value: value.value },
									value.label
								);
							}
						})
					);

				default:

					return React.createElement('input', {
						key: 'pods-block__conditional-rule-' + index + '-value',
						className: 'pods-block__conditional-rule-value',
						value: value,
						onChange: updateValue
					});

			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props$rule = this.props.rule,
			    key = _props$rule.key,
			    operator = _props$rule.operator;

			var index = this.props.index;
			var options = this.props.options;

			var deleteRule = function deleteRule() {
				return _this3.props.deleteRule(index);
			};

			var updateKey = function updateKey(e) {
				return _this3.updateKey(e.target.value);
			};
			var updateOperator = function updateOperator(e) {
				return _this3.updateOperator(e.target.value);
			};

			var keySelect = React.createElement(
				'select',
				{
					key: 'pods-block__conditional-rule-' + index + '-key',
					className: 'pods-block__conditional-rule-key',
					value: key,
					onChange: updateKey },
				options.map(function (option) {
					return React.createElement(
						'option',
						{ key: option.key.value, value: option.key.value },
						option.key.label
					);
				})
			);

			var operatorSelect = React.createElement(
				'select',
				{
					key: 'pods-block__conditional-rule-' + index + '-operator',
					className: 'pods-block__conditional-rule-operator',
					value: operator,
					onChange: updateOperator },
				this.getOperators().map(function (operator) {
					return React.createElement(
						'option',
						{ key: operator.value, value: operator.value },
						operator.label
					);
				})
			);

			return React.createElement(
				'div',
				{ className: 'pods-block__conditional-rule' },
				React.createElement(
					'div',
					{ className: 'pods-block__conditional-rule-inputs' },
					keySelect,
					operatorSelect,
					this.getValueInput()
				),
				React.createElement(
					'div',
					{ className: 'pods-block__conditional-rule-controls' },
					React.createElement(
						'span',
						{ className: 'pods-block__conditional-rule-delete', onClick: deleteRule },
						React.createElement(Dashicon, {
							key: 'pods-block__conditional-rule-delete-' + index,
							icon: 'trash'
						})
					)
				)
			);
		}
	}]);

	return Rule;
}(Component);

/* harmony default export */ __webpack_exports__["a"] = (Rule);

/***/ })
/******/ ]);